* {
    margin: 0;
    box-sizing: border-box;
    padding: 0;
}

.container {
    display: grid;
    grid-template-columns: repeat(4,1fr); /*! repeat aynıları bir kerede yapmamıızı sağlar */
    /* grid-template-rows: repeat(4,25vh); ! 5 kullansaydık olmazdı çünkü onu kullanırken parent ın yüksekliği olmalı */
    grid-template-rows: 25vh repeat(3, calc(25vh - 0.5rem)); /*! Üç tane aralık var ve üç tane çıkarıyoruz.Calc bir hesaplama yapıyor. */

    row-gap: 0.5rem; /*!satır aralarına aralık verir.*/
    column-gap: 0.5rem; /*! sutunlara aralık verir*/
    /* gap: 1rem 2rem;  */
    /*! ilk satır ikincisi sutuna verir.*/


}

/*? Display flex vermedik buralarda çünkü bununla içeriklerini hizalarız gridlerin ama griglerin kendini hizalamak içinde flex vermeden hizalama yapıyoruz. */

.content {
    background-color: royalblue;
    border: 1px solid red;

}

.content img {
    width: 100%;
    height: 100%;
    object-fit: cover; 
    /*! Bu object-fit backgraound img vermediğimizde width ve height ini 1005 yapınca cover yaparsak resmi cell e sığdırır. Bu özelliği viddeo eklediğimizde taşmaları önlemek için yapıyoruz.*/

    /*? Grid e video eklemek için iframe i kullanıyoruz. */
}

.content iframe {
    width: 100%;
    height: 100%;
    object-fit: cover; 
    /*! Burada video yu cell e sığdırdık foto da olduğu gibi */
}

.c6 {
    justify-self: center    ;
     /*! bunda tek grid hizalaması yapılır içeriğine göre hizalama yapar. İtems ları bireysel hizalıyoruz. */
     width: 6rem; /*!genişlik ayarlarız istersek */
}

.c11 {
    align-self: center;
    /*! Buradada dikey olarak hizalama yapıyoruz. itemları(bireysel) */

    height: 3rem; /*! yükseklik verilebilir. */
}

.c1 {
    grid-column-start: 1;
    grid-column-end: 3;
    background-color: green;
    /*! Burada 1den başla ve 3 e kadar sutunları birleştir demek rowlar içinde column yerine row yazıyoruz. */

}

.c4 {
    grid-row: 2 / 4;
    background-color: gold;
    /*! Burada 2 den başla 4 e kadar satırları birleştir. Column içinde row yerine column yaz */
}

.c8 {
    background-color: goldenrod;
    /* grid-column-start: 2;
    grid-column-end: 4;
    grid-row-start: 3;
    grid-row-end: 5; */

    /*! Grid area : row-start / column-start / row-end / column-end */
    grid-area: 3/2/5/4;
}

.c2 {
    background-color: gray;
    grid-area: 1/3 / span 2/ span 2;
    /*! span ile ne kadar birleşrimel istersek onu yazıyoruz ve birleştiriyor.*/
}